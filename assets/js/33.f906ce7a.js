(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{455:function(s,t,a){"use strict";a.r(t);var n=a(41),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"node-模块加载机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-模块加载机制"}},[s._v("#")]),s._v(" Node 模块加载机制")]),s._v(" "),a("hr"),s._v(" "),a("p",[a("em",[s._v("2020/11/11")])]),s._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("这里不会讲 JS 模块发展历程，只是单纯讲讲 Node 模块加载机制 ---- CommonJS。")])]),s._v(" "),a("h2",{attrs:{id:"commonjs-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-规范"}},[s._v("#")]),s._v(" CommonJS 规范")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("CommonJS 对模块的定义十分简单，主要分为模块引用、模块定义和模块标识3部分。")])]),s._v(" "),a("h3",{attrs:{id:"模块引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块引用"}},[s._v("#")]),s._v(" 模块引用")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("模块通过 "),a("strong",[s._v("require()")]),s._v(" 方法引用，如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在CommonJS规范中，存在 require() 方法，这个方法接受模块标识，以此引入一个模块的API到当前上下文中。")])]),s._v(" "),a("h3",{attrs:{id:"模块定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块定义"}},[s._v("#")]),s._v(" 模块定义")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("在模块中，上下文提供 require() 方法来引入外部模块。对应引入的功能，上下文提供了 "),a("strong",[s._v("exports")]),s._v(" 对象用于导出当前模块的方法或者变量，并且它是唯一导出的出口。在模块中，还存在一个 "),a("strong",[s._v("module")]),s._v(" 对象，它代表模块自身，而 exports 是模块的一个属性。在 Node 中，一个文件就是一个模块，将方法挂载在 exports 对象上作为属性即可定义导出的方式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// myModule.js")]),s._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("sayHello")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello CommonJS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// main.js")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" myModule "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./myModule'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmyModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("h3",{attrs:{id:"模块标识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块标识"}},[s._v("#")]),s._v(" 模块标识")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("模块标识其实就是传递给 require() 方法的参数，它必须是符合小驼峰命名的字符串，或者以 . 或 .. 开头的相对路径，或者结绝对路径。它可以没有文件名后缀 .js。")]),s._v(" "),a("p",[s._v("模块的定义十分简单，接口也十分简单。它的意义在于将类聚的方法和变量等限定在私有的作用域中，同时支持引入和导出功能以顺畅地连接上下游依赖。每个模块具有独立的空间，它们互不干扰，在引用时也显得干净利落。")])]),s._v(" "),a("h2",{attrs:{id:"node-模块加载过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-模块加载过程"}},[s._v("#")]),s._v(" Node 模块加载过程")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("在 Node 中引入一个模块，需要经历如下3个步骤：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("路径分析")])]),s._v(" "),a("li",[a("p",[s._v("文件定位")])]),s._v(" "),a("li",[a("p",[s._v("编译执行")]),s._v(" "),a("p",[s._v("在 Node 中，模块分为两类：一类是 Node 提供的模块，称为核心模块；另一类是用户编写的模块，称为文件模块。")]),s._v(" "),a("p",[a("strong",[s._v("核心模块")]),s._v(" 部分在 Node 源代码的编译过程中，编译进了二进制执行文件。在 Node 进程启动时，部分核心模块就被直接加载进内存，所以这部分核心模块引入时，文件定位和编译执行这两个步骤可以省略掉，并且在路径分析中优先判断，所以它的加载速度是最快的。")]),s._v(" "),a("p",[a("strong",[s._v("文件模块")]),s._v(" 则是在运行时动态加载，需要完整的路径分析、文件定位、编译执行过程，速度比核心模块慢。")]),s._v(" "),a("p",[s._v("与浏览器会缓存静态脚本文件以提高性能一样，Node 对引入过的模块都会进行缓存，以减少二次引入时的开销。不同的地方在于，浏览器仅仅缓存文件，而 Node 缓存的是编译和执行之后的对象。")])])])]),s._v(" "),a("h3",{attrs:{id:"路径分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径分析"}},[s._v("#")]),s._v(" 路径分析")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("路径分析是根据 require() 方法传入的参数进行的，即模块标识符。模块标识符在 Node 中主要有以下几类：")]),s._v(" "),a("ul",[a("li",[s._v("核心模块，如 http、fs、path等")]),s._v(" "),a("li",[s._v(". 或 .. 开始的相对路径文件模块。")]),s._v(" "),a("li",[s._v("以 / 开始的绝对路径文件模块。")]),s._v(" "),a("li",[s._v("非路径形式的文件模块，如自定义的 connect 模块。")])])]),s._v(" "),a("h4",{attrs:{id:"核心模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心模块"}},[s._v("#")]),s._v(" 核心模块")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("核心模块的优先级仅次于缓存加载，它在 Node 源代码编译过程中已经编译为二进制代码，其加载过程最快。")]),s._v(" "),a("p",[s._v("如果试图加载一个与核心模块标识符相同的自定义模块，那是不会成功的。如果自己编写了一个 http 用户模块，想要加载成功，必须选择一个不同的标识符或者换用路径的方式。")])]),s._v(" "),a("h4",{attrs:{id:"路径形式的文件模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径形式的文件模块"}},[s._v("#")]),s._v(" 路径形式的文件模块")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("以 . 、.. 和 / 开始的标识符，这里都被当做文件模块来处理。在分析路径模块时，require() 方法会将路径转为真实路径，并以真实路径作为索引，将编译执行后的结果存放到缓存中，以使二次加载时更快。")]),s._v(" "),a("p",[s._v("由于文件模块给 Node 指明了确切的文件位置，所以在查找过程中可以节约大量时间，其加载速度慢于核心模块。")])]),s._v(" "),a("h4",{attrs:{id:"自定义模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义模块"}},[s._v("#")]),s._v(" 自定义模块")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("自定义模块指的是非核心模块，也不是路径形式的标识符。它是一种特殊的文件模块，可能是一个文件或者包的形式。这类模块的查找是所有方式中最慢的一种。")]),s._v(" "),a("p",[s._v("在了解自定义模块的查找方式之前，先介绍下 "),a("strong",[s._v("模块路径")]),s._v(" 这个概念。模块路径是 Node 在定位文件模块的具体文件时制定的查找策略，具体表现为一个路径组成的数组。关于这个路径的生成规则，可通过 "),a("strong",[s._v("module.paths")]),s._v(" 查看。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("paths"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n[\n  'D:\\\\VSCode\\\\test\\\\node-server\\\\node_modules',\n  'D:\\\\VSCode\\\\test\\\\node_modules',\n  'D:\\\\VSCode\\\\node_modules',\n  'D:\\\\node_modules'\n]\n*/")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("可以看出，模块路径的生成规则如下：")]),s._v(" "),a("ul",[a("li",[s._v("当前文件目录下的 node_modules 目录")]),s._v(" "),a("li",[s._v("父目录下的 node_modules 目录")]),s._v(" "),a("li",[s._v("父目录的父目录下的 node_modules 目录")]),s._v(" "),a("li",[s._v("沿路径向上逐级递归，直到根目录下的 node_modules 目录")])]),s._v(" "),a("p",[s._v("它的生成方式与 JavaScript 的"),a("strong",[s._v("原型链")]),s._v("或"),a("strong",[s._v("作用域链")]),s._v("的查找方式十分类似。在加载过程中，Node会逐个尝试模块路径中的路径，直到找到目标文件为止。可以看出，当前文件的路径越深，模块查找耗时会越多，这是自定义模块加载速度最慢的原因。")])]),s._v(" "),a("h3",{attrs:{id:"文件定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件定位"}},[s._v("#")]),s._v(" 文件定位")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("在文件定位过程中，还有一些细节需要注意，这主要包括文件扩展名的分析、目录和包的处理。")])]),s._v(" "),a("h4",{attrs:{id:"文件扩展名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件扩展名"}},[s._v("#")]),s._v(" 文件扩展名")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("require() 在分析模块标识符的过程中，会出现标识符中不包含文件扩展名的情况。CommonJS 模块规范也允许在标识符中不包含文件扩展名，这种情况下，Node 会按 .js、.json、.node 的次序不足扩展名，依次尝试。")]),s._v(" "),a("p",[s._v("在尝试的过程中，需要调用fs模块同步阻塞式地判断文件是否存在，因为 Node 是单线程的，所以这里是一个会引起性能问题的地方。")])]),s._v(" "),a("h4",{attrs:{id:"目录分析和包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录分析和包"}},[s._v("#")]),s._v(" 目录分析和包")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("在分析标识符的过程中，require() 通过分析文件扩展名之后，可能没有查到对应文件，但是得到一个目录，这在引入地第三方模块和逐个模块路径查找时经常会出现，此时 Node 会将目录当做一个包来处理。")]),s._v(" "),a("p",[s._v("在这个过程中，Node 对 CommonJS 包规范进行了一定程度的支持。首先，Node 在当前目录下查找 package.json，通过 JSON.parse() 解析出包描述对象，从中取出 "),a("strong",[s._v("main")]),s._v(" 属性指定的文件名进行定位，或者压根没有 package.json 文件，Node 会将 index 当作默认文件名，然后依次查找 index.js、index.json、index.node。")]),s._v(" "),a("p",[s._v("如果在目录分析的过程中没有定位成功任何文件，则自定义模块进入下一个模块路径进行查找。如果模块路径数组都被遍历完毕，依然没有查找到目标文件，则会抛出查找失败的异常。")])]),s._v(" "),a("h3",{attrs:{id:"模块编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块编译"}},[s._v("#")]),s._v(" 模块编译")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("在 Node 中，每个文件模块都是一个对象，它的定义如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" id\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("filename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("loaded "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("编译和执行是引入文件模块的最后一个阶段。定位到具体的文件后，Node 会新建一个模块对象，然后根据路径载入并编译，对于不同的文件扩展名，其载入方法也有所不同，具体如下：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v(".js 文件")]),s._v(" ---- 通过模块同步读取文件后编译执行")]),s._v(" "),a("li",[a("strong",[s._v(".node 文件")]),s._v(" ---- 这是用 C/C++ 编写的扩展文件，通过 dlopen() 方法加载后编译生成文件")]),s._v(" "),a("li",[a("strong",[s._v(".json 文件")]),s._v(" ---- 通过fs模块同步读取文件后，用 JSON.parse() 解析返回结果")]),s._v(" "),a("li",[a("strong",[s._v("其余扩展名文件")]),s._v(" ---- 它们都被当作 .js 文件载入")])]),s._v(" "),a("p",[s._v("每个编译成功的模块都会将其文件路径作为所以缓存在 "),a("strong",[s._v("Module._cache")]),s._v(" 对象上，以提高二次引入的性能。")]),s._v(" "),a("p",[s._v("根据不同的文件扩展名，Node 会调用不同的读取方式，如 .json 文件的调用如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Native extension for .json")]),s._v("\nModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_extensions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" content "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" NativeModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("requier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'utf8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stripBOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" filename "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("': '")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("message\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" err\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("其中，Module._extensions 会被赋值给 require() 的 extensions 属性，所以通过在代码中访问 require.extensions 可以知道系统中已有的扩展加载方式，如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("extensions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n{\n  '.js': [Function (anonymous)],\n  '.json': [Function (anonymous)],\n  '.node': [Function (anonymous)]\n}\n*/")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("如果想对自定义的扩展名进行特殊的加载，可以通过类似 require.extensions['.txt'] 的方式实现。但是目前官方不鼓励通过这种方式来自定义扩展名的加载，而是期望先将其他语言或文件编译成 JavaScript 文件后再加载，这样做的好处在于不将繁琐的编译加载等过程引入 Node 的执行过程。")]),s._v(" "),a("p",[s._v("在确定文件的扩展名后，Node 将调用具体的编译方式来将文件执行后返回给调用者。下面看看这三种扩展名的编译方式。")])]),s._v(" "),a("h4",{attrs:{id:"javascript-模块的编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-模块的编译"}},[s._v("#")]),s._v(" JavaScript 模块的编译")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("在 CommonJS 中，我们知道每个模块文件中存在着 require、exports、module 这3个变量，但是它们在模块文件中并没有定义，那么它们从何而来呢？甚至在 Node 的 API 文档中，我们知道每个模块中还有 __filename、__dirname 两个变量的存在，它们又是从何而来的呢？")]),s._v(" "),a("p",[s._v("事实上，在编译的过程中，Node 对获取的 JavaScript 文件内容进行了头尾包装。在头部添加了 (function(exports, require, module, __filename, __dirname){\\n, 在尾部添加了\\n});。一个正常的 JavaScript 文件会被包装成如下的样子：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" __filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" __dirname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" math "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'math'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("area")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PI")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" radius "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" radius\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这样每个每个模块文件之间都进行了作用域隔离。包装之后的代码会通过 vm 元素模块的 runInThisContext() 方法执行（类似 eval，只是具有明确上下文，不污染全局），返回一个具体的 function 对象。最后，将当前模块对象的 exports 属性、require() 方法、module(模块对象自身)，以及在文件定位中得到的完整文件路径和文件目录作为参数传递给这个 function() 执行。")]),s._v(" "),a("p",[s._v("这就是这些变量并没有定义在每个模块文件中却存在的原因。在执行之后，模块的 exports 属性被返回给了调用方。exports 属性上的任何方法和属性都可以被外部调用到，但是模块中的其余变量或属性则不可被直接调用。")]),s._v(" "),a("p",[s._v("这也解释了为什么 require() 是同步的，且每次 require() 得到的对象都是一个新的对象，以及在模块内直接给 exports 对象赋值是无效的，而必须通过 module.exports = newVal 这种方式赋值等这些问题。")])]),s._v(" "),a("h4",{attrs:{id:"c-c-模块的编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-c-模块的编译"}},[s._v("#")]),s._v(" C/C++ 模块的编译")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("Node 调用 process.dlopen() 方法进行加载和执行。在 Node 的架构下，dlopen() 方法在 Windows 和 *nix 平台下分别有不同的实现，通过 libuv 兼容层进行了封装。")]),s._v(" "),a("p",[s._v("实际上， .node 的模块文件并不需要编译，因为它是编写 C/C++ 模块之后编译生成的，所以这里只有加载和执行的过程。在执行的过程中，模块的 exports 属性与 .node 模块产生联系，然后返回给调用者。")]),s._v(" "),a("p",[s._v("C/C++ 模块给 Node 使用者带来的优势主要是执行效率方面的，劣势则是 C/C++ 模块的编写门槛比 JavaScript 高。")])]),s._v(" "),a("h4",{attrs:{id:"json-文件的编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-文件的编译"}},[s._v("#")]),s._v(" JSON 文件的编译")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v(".json 文件的编译时3中编译方式中最简单的。Node 利用fs模块同步读取 JSON 文件的内容之后，调用 JSON.parse() 方法得到对象，然后将它赋给模块对象的 exports，以供外部调用。")]),s._v(" "),a("p",[s._v("本文参考 《深入浅出Node.js》")]),s._v(" "),a("p",[a("a",{attrs:{href:"/frontend"}},[s._v("回首页")])])]),s._v(" "),a("p",[s._v("（完）")])])}),[],!1,null,null,null);t.default=e.exports}}]);